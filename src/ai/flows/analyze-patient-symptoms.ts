// 'use server'

'use server';

/**
 * @fileOverview AI flow for analyzing patient symptoms, identifying ICD-10 codes,
 * calculating risk scores, and drafting initial SOAP notes.
 *
 * - analyzePatientSymptoms - Analyzes patient data and generates SOAP notes.
 * - AnalyzePatientSymptomsInput - Input type for analyzePatientSymptoms function.
 * - AnalyzePatientSymptomsOutput - Return type for analyzePatientSymptoms function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

// Input schema for the analyzePatientSymptoms flow
const AnalyzePatientSymptomsInputSchema = z.object({
  patientInformation: z
    .string()
    .describe('Comprehensive details about the patient, including medical history.'),
  vitals: z.string().describe('Patient vitals such as heart rate, blood pressure, etc.'),
  observations: z
    .string()
    .describe('Doctor’s observations regarding the patient’s condition.'),
});

export type AnalyzePatientSymptomsInput = z.infer<
  typeof AnalyzePatientSymptomsInputSchema
>;

// Output schema for the analyzePatientSymptoms flow
const AnalyzePatientSymptomsOutputSchema = z.object({
  icd10Tags: z
    .array(z.string())
    .describe('List of relevant ICD-10 codes identified by the analysis.'),
  riskScore: z.number().describe('Calculated risk score based on the input data.'),
  soapNotes: z
    .string()
    .describe('Draft SOAP notes generated by the AI, ready for review and editing.'),
});

export type AnalyzePatientSymptomsOutput = z.infer<
  typeof AnalyzePatientSymptomsOutputSchema
>;

// Tool definition for fetching ICD-10 codes
const fetchICDCodes = ai.defineTool(
  {
    name: 'fetchICDCodes',
    description: 'Retrieves relevant ICD-10 codes based on patient symptoms.',
    inputSchema: z.object({
      symptoms: z.string().describe('A description of the patient symptoms.'),
    }),
    outputSchema: z.array(z.string()),
  },
  async input => {
    // Placeholder implementation - replace with actual ICD-10 code retrieval logic
    console.log('fetching ICD-10 codes for symptoms:', input.symptoms);
    return [
      'R51', // Example ICD-10 code
      'J06.9', // Example ICD-10 code
    ];
  }
);

// Tool definition for calculating risk score
const calculateRiskScore = ai.defineTool(
  {
    name: 'calculateRiskScore',
    description: 'Calculates a risk score based on patient information and vitals.',
    inputSchema: z.object({
      patientInformation: z
        .string()
        .describe('Comprehensive details about the patient, including medical history.'),
      vitals: z.string().describe('Patient vitals such as heart rate, blood pressure, etc.'),
    }),
    outputSchema: z.number(),
  },
  async input => {
    // Placeholder implementation - replace with actual risk score calculation logic
    console.log('calculating risk score for patient:', input.patientInformation);
    return 0.75; // Example risk score
  }
);

// Prompt definition for analyzing patient symptoms and drafting SOAP notes
const analyzePatientSymptomsPrompt = ai.definePrompt({
  name: 'analyzePatientSymptomsPrompt',
  input: {schema: AnalyzePatientSymptomsInputSchema},
  output: {schema: AnalyzePatientSymptomsOutputSchema},
  tools: [fetchICDCodes, calculateRiskScore],
  prompt: `As a medical AI, analyze the patient information, vitals, and doctor's observations to identify relevant ICD-10 tags, calculate a risk score, and draft initial SOAP notes.

Patient Information: {{{patientInformation}}}
Vitals: {{{vitals}}}
Observations: {{{observations}}}

First, use the fetchICDCodes tool to identify relevant ICD-10 codes based on the patient's symptoms and conditions described in the patient information and doctor's observations. Then, use the calculateRiskScore tool to determine the patient's risk score based on provided patient information and vitals.

Based on this, draft SOAP notes which summarize the Subjective findings, Objective findings, Assessment, and Plan. Be concise and clinically relevant.

Ensure that the ICD-10 codes and risk score are incorporated into the SOAP notes appropriately.

Output the ICD-10 tags, risk score, and SOAP notes in the format specified by the AnalyzePatientSymptomsOutputSchema.`,
});

// Flow definition for analyzing patient symptoms
const analyzePatientSymptomsFlow = ai.defineFlow(
  {
    name: 'analyzePatientSymptomsFlow',
    inputSchema: AnalyzePatientSymptomsInputSchema,
    outputSchema: AnalyzePatientSymptomsOutputSchema,
  },
  async input => {
    const {output} = await analyzePatientSymptomsPrompt(input);
    return output!;
  }
);

// Exported function to analyze patient symptoms
export async function analyzePatientSymptoms(
  input: AnalyzePatientSymptomsInput
): Promise<AnalyzePatientSymptomsOutput> {
  return analyzePatientSymptomsFlow(input);
}
